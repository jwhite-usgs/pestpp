language: cpp
dist: bionic
os: linux

git:
  depth: 1

services:
  - xvfb

compiler:
  - gcc

jobs:
  include:
    - name: "pestpp-opt tests"
      env:
        TEST_REPO="https://github.com/usgs/pestpp-opt_benchmarks"
        TEST_SCRIPT="opt_test.py"

    - name: "pestpp-ies tests part 1"
      env:
        TEST_REPO="https://github.com/usgs/pestpp-ies_benchmarks"
        TEST_SCRIPT="ies_test_part1.py"

    - name: "pestpp-ies tests part 2"
      env:
        TEST_REPO="https://github.com/usgs/pestpp-ies_benchmarks"
        TEST_SCRIPT="ies_test_part2.py"

    - name: "pestpp-ies tests part 3"
      env:
        TEST_REPO="https://github.com/usgs/pestpp-ies_benchmarks"
        TEST_SCRIPT="ies_test_part3.py"

    - name: "pestpp-ies tests part 4"
      env:
        TEST_REPO="https://github.com/usgs/pestpp-ies_benchmarks"
        TEST_SCRIPT="ies_test_part4.py"

    - name: "pestpp-ies tests baseline"
      env:
        TEST_REPO="https://github.com/usgs/pestpp-ies_benchmarks"
        TEST_SCRIPT="ies_test_base.py"

    - name: "pestpp-glm tests baseline"
      env:
        TEST_REPO="https://github.com/usgs/pestpp-glm_benchmarks"
        TEST_SCRIPT="glm_test_base.py"

    - name: "basic tests"
      env:
        TEST_REPO="https://github.com/usgs/pestpp"
        TEST_SCRIPT="basic_tests.py"
        TEST_DIR="benchmarks"

    - name: "mou tests"
      env:
        TEST_REPO="https://github.com/usgs/pestpp"
        TEST_SCRIPT="mou_tests.py"
        TEST_DIR="benchmarks"
    - name: "sqp tests"
      env:
        TEST_REPO="https://github.com/usgs/pestpp"
        TEST_SCRIPT="sqp_tests.py"
        TEST_DIR="benchmarks"

before_script:
  - mkdir build && cd build
  - cmake -DCMAKE_BUILD_TYPE=Release ..
  - make -j2
  # executable targets are automatically installed into bin
  - cd ..
  - wget http://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh
  - bash miniconda.sh -b -p $HOME/miniconda
  - source "$HOME/miniconda/etc/profile.d/conda.sh"
  - hash -r
  - conda config --set always_yes yes --set changeps1 no
  - conda update -q conda
  - conda create -q -n ci python=3.6 pip numpy scipy pandas matplotlib nose
  - conda activate ci
  - git clone --depth 1 --single-branch -b develop https://github.com/modflowpy/flopy.git
  - pip install ./flopy
  - git clone --depth 1 --single-branch -b develop https://github.com/jtwhite79/pyemu.git
  - pip install ./pyemu

script:
  - git clone --depth 1 -b master $TEST_REPO
  - if [ ! -n "${TEST_DIR+set}" ]; then export TEST_DIR=$(basename $TEST_REPO); fi
  - cd $TEST_DIR
  - export PATH="$TRAVIS_BUILD_DIR/$TEST_DIR/test_bin/linux:$PATH"
  # Ensure repo name is named 'pestpp' for tests
  - if [ ! -d ../../pestpp ]; then ln -sr ../../$(basename $TRAVIS_REPO_SLUG) ../../pestpp; fi
  - nosetests -v $TEST_SCRIPT


# after_success:
#   - chmod +x trigger-travis.sh
#   - ./trigger-travis.sh jtwhite79 pestpp-opt_benchmarks $TRAVIS_ACCESS_TOKEN
#   - ./trigger-travis.sh jtwhite79 pestpp-ies_benchmarks $TRAVIS_ACCESS_TOKEN
#   - ./trigger-travis.sh jtwhite79 pestpp-ies_benchmarks2 $TRAVIS_ACCESS_TOKEN
#   - ./trigger-travis.sh jtwhite79 pestpp-ies_benchmarks_base $TRAVIS_ACCESS_TOKEN
notifications:
  email: 
    recipents:
      - jtwhite1000@gmail.com
    on_success: always
    on_failure: always
